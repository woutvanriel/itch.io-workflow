name: test the application
run-name: run tests for ${{ github.actor }}, ${{ github.event.head_commit.message }}
on:
  push:
    branches:
      - dev
  workflow_dispatch: {}
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - uses: nschloe/action-cached-lfs-checkout@v1
      name: Checkout
    - uses: actions/cache@v2
      name: Cache
      with:
        path: ${{ matrix.projectPath }}/Library
        key: Library-${{ matrix.projectPath }}
        restore-keys: |
          Library-
    - name: Run tests
      id: tests
      uses: game-ci/unity-test-runner@v3
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL  }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD  }}
      with:
        projectPath: ${{ env.PROJECT_PATH }}
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        coverageOptions: useProjectSettings
    - name: Upload test artifacts
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: Test results
        path: ${{ steps.tests.outputs.artifactsPath }}
    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: Coverage results
        path: ${{ steps.tests.outputs.coveragePath }}
    - name: Archive artifact
      shell: sh
      if: runner.os == 'Linux'
      run: |
        tar \
          --dereference --hard-dereference \
          --directory "$INPUT_PATH" \
          -cvf "$RUNNER_TEMP/artifact.tar" \
          --exclude=.git \
          --exclude=.github \
          .
      env:
        INPUT_PATH: ${{ steps.tests.outputs.coveragePath }}/Report
    - name: Upload coverage pages artifact
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: github-pages
        path: ${{ runner.temp }}/artifact.tar
  upload-coverage:
    name: Upload Code Coverage report to GitHub pages
    runs-on: ubuntu-latest
    needs: test
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Setup Pages
      uses: actions/configure-pages@v3
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
